@model i04.Web.Models.Home.ChartsDataViewModel



@{
    ViewBag.Title = "Sorting Algorithms";
}

<script src="~/Scripts/io4.js"></script>


<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js"></script>
<script type="text/javascript">

    function UpdateChart2(data) {
        var ctx = document.getElementById("bar-chart2").getContext('2d');
        var myChart = new Chart(ctx,
            {
                type: 'bar',
                data: {
                    labels: data,
                    datasets: [
                        {
                            label: 'After Sorting',
                            data: data,
                            backgroundColor: '#3fdbcb'
                        }
                    ]
                },
                options: {
                    animation: false
                }
            });

    }
</script>

<script type="text/javascript">

    function UpdateChart1(data) {
        var ctx = document.getElementById("bar-chart1").getContext('2d');
        var myChart = new Chart(ctx,
            {
                type: 'bar',
                data: {
                    labels: data,
                    datasets: [
                        {
                            label: 'Before Sorting',
                            data: data,

                            backgroundColor: '#3fdbcb'
                        }
                    ]
                },
                options: {
                    animation: false
                }
            });
    }
</script>

@section scripts{

    <script src="@Url.Content("~/Scripts/jquery.signalR-2.2.2.min.js")"></script>
    <script src="@Url.Content("~/signalr/hubs")"></script>
    <script>
        (function () {
            var algoHub = $.connection.algoHub;
            $.connection.hub.start()
                .done(function () {
                    console.log("connected");
                    algoHub.server.getId().done(function (id) {
                        console.log("ID" + id);
                        $('#ConId').val(id);
                    }).fail(function (e) { console.log("Failed" + e) });
                });
            algoHub.client.updateChart2 = function (data) {
                console.log("chart2");
                UpdateChart2(data);
            }
            algoHub.client.updateChart1 = function (data) {
                console.log("chart1");
                UpdateChart1(data);
            }

        })()
    </script>
}
<div class="container col-lg-12 col-sm-12 col-md-12">
    <h2>
        Sorting algorithms
    </h2>
    <hr />
    <script src="~/Scripts/jquery-3.2.1.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>

    <div>
        @using (Ajax.BeginForm(
             "Index",
            "SortingAlgorithms",
             null,
             new AjaxOptions
             {
                 UpdateTargetId = "bar-chart1",
                 InsertionMode = InsertionMode.Replace,
             },
             new { id = "Algor" }))

        {  <p style="color:red">@ViewBag.CheckBoxError</p>
        @Html.LabelFor(m => Model.Amount, "Enter the ammount of random numbers (0-20) ");
            @Html.TextBoxFor(m => Model.Amount, new { @id = "amount", @class = "text-b" });
            @Html.HiddenFor(m => m.ConId, new { @id = "ConId" });

            <table>
                @for (int idx = 0; idx < Model.CheckBoxAlgoType.Count; idx++)
                {
                    <tr>
                        <td>

                            @Html.HiddenFor(x => Model.CheckBoxAlgoType[idx].Id)
                            @Html.HiddenFor(x => Model.CheckBoxAlgoType[idx].Name)
                            @Html.CheckBoxFor(x => Model.CheckBoxAlgoType[idx].IsSelected)


                            @Html.DisplayFor(x => Model.CheckBoxAlgoType[idx].Name)

                        </td>
                    </tr>
                }
            </table>


            <input type="submit" value="Enter" />
        }

    </div>
    <script type="text/javascript">
        function getTextBoxContent() {
            return document.getElementById('ConId').value;
        }
    </script>
    <hr />

    <div style="float: left" class="col-xl-6 col-lg-6 col-md-6 col-sm-12 col-xs-12">
        <canvas id="bar-chart1"></canvas>
    </div>
    <script>
            new Chart(document.getElementById("bar-chart1"),
                {
                    type: 'bar',
                    data: {
                        labels: [@(Model.Numbers.Length > 0 ? string.Join(",", Model.Numbers[0]):"")],
                        datasets: [
                            {
                                label: "First number:"+@(Model.Numbers.Length > 0&&Model.Numbers[0].Length>0 ? Model.Numbers[0][0]:1) ,
                                backgroundColor: getColors(@(Model.Numbers.Length > 0 ?Model.Numbers[0].Length:0)).split(','),
                                data: [@(Model.Numbers.Length > 0?  string.Join(",", Model.Numbers[0]):"")]
                            }
                        ]
                    },
                    options: {

                        legend: { display: true },
                        title: {
                            display: true,
                            text: ['Result for:' + @Model.Amount + ' random numbers ' + '|' +' @ViewBag.ExecutionTime'],

                        }
                    }
                });
    </script>

    <div style="float: left" class="col-xl-6 col-lg-6 col-md-6 col-sm-12 col-xs-12">
        <canvas id="bar-chart2"></canvas>
    </div>
    <script>
                new Chart(document.getElementById("bar-chart2"),
                    {
                        type: 'bar',
                        data: {
                            labels: [@(Model.Numbers.Length > 0?  string.Join(",", Model.Numbers[1]) :"")],
                            datasets: [
                                {
                                   label: "First number:"+@(Model.Numbers.Length > 0 && Model.Numbers[1].Length > 0 ? Model.Numbers[1][0]:0) ,
                                   @*backgroundColor: getColors(@Model.Numbers[1].Length).split(','),*@
                                   backgroundColor:  "#3fdbcb",

                                    data: [@(Model.Numbers.Length > 0?  string.Join(",", Model.Numbers[1]):"")]
                                }
                            ]
                        },
                        options: {

                            legend: { display: true },
                            title: {
                                display: true,
                                text: ['Result for:' + @Model.Amount + ' random numbers ' + '|' +' @ViewBag.ExecutionTime'],

                            }
                        }
                    });
    </script>
    <br />
</div>

<div id="element" style="float: left" class="col-xl-6 col-lg-6 col-md-6 col-sm-12 col-xs-12"></div>



<script type="text/javascript">


                //Buble Sort Partial

                $('#CheckBoxAlgoType_0__IsSelected').on('change', function () {
                    if (this.checked) {
                        $('#CheckBoxAlgoType_1__IsSelected').attr('disabled', true);
                        $('#CheckBoxAlgoType_2__IsSelected').attr('disabled', true);
                        $.ajax({
                            url: '@Url.Action("_partialSort", "SortingAlgorithms", new { sortMethod = "_bubleSort" })',
                type: "Get",
                success: function (data) {
                    $("#element").html(data);
                }
            });
        }
        else {
            $('#CheckBoxAlgoType_2__IsSelected').attr('disabled', false);
            $('#CheckBoxAlgoType_1__IsSelected').attr('disabled', false);
            $("#element").html('');
        }
                })

    //Merge Sort Partial

    $('#CheckBoxAlgoType_1__IsSelected').on('change', function () {
        if (this.checked) {
            $('#CheckBoxAlgoType_0__IsSelected').attr('disabled', true);
            $('#CheckBoxAlgoType_2__IsSelected').attr('disabled', true);
            $.ajax({
                url: '@Url.Action("_partialSort", "SortingAlgorithms", new { sortMethod = "_mergeSort" })',
                type: "Get",
                success: function (data) {
                    $("#element").html(data);
                }
            });
        }
        else {
            $('#CheckBoxAlgoType_0__IsSelected').attr('disabled', false);
            $('#CheckBoxAlgoType_2__IsSelected').attr('disabled', false);
            $("#element").html('');
        }
                })

     //Quick Sort Partial

    $('#CheckBoxAlgoType_2__IsSelected').on('change', function () {
        if (this.checked) {
            $('#CheckBoxAlgoType_0__IsSelected').attr('disabled', true);
            $('#CheckBoxAlgoType_1__IsSelected').attr('disabled', true);
            $.ajax({
                url: '@Url.Action("_partialSort", "SortingAlgorithms", new { sortMethod = "_quickSort" })',
                type: "Get",
                success: function (data) {
                    $("#element").html(data);
                }
            });
        }
        else {
            $('#CheckBoxAlgoType_0__IsSelected').attr('disabled', false);
            $('#CheckBoxAlgoType_1__IsSelected').attr('disabled', false);
            $("#element").html('');
        }
                })



</script>
